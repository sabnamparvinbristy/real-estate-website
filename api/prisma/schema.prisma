generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")  // This will use the connection string from the .env file
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId  // MongoDB ObjectId field
  email     String   @unique  // Ensure unique email for each user
  username  String   @unique  // Ensure unique username
  password  String   // Store hashed password
  avatar    String?  // Optional avatar field
  createdAt DateTime @default(now())  // Automatically set to the current timestamp
  posts Post[]
  savedPosts SavedPost[]
}

model Post {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  price      Int
  images        String[]
  address    String
  city       String
  bedroom    Int
  bathroom   Int
  latitude   String
  longitude  String
  type       Type
  property   Property
  createdAt  DateTime   @default(now())
  user       User       @relation(fields: [userId], references: [id])
  userId     String     @db.ObjectId
  postDetail PostDetail?
  savedPosts SavedPost[]
}

enum Type {
  buy
  rent
}

enum Property {
  apartment
  house
  condo
  land
}

model PostDetail {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  desc       String
  utilities  String?
  pet        String?
  income     String?
  size       Int?
  school     Int?
  bus        Int?
  restaurant Int?

  post       Post     @relation(fields: [postId], references: [id])
  postId     String   @db.ObjectId @unique
}


model SavedPost {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  userId    String   @unique @db.ObjectId
  postId    String   @unique @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

